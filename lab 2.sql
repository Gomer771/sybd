USE db

CREATE TABLE GROUPS (
    GROUP_ID INTEGER PRIMARY KEY,
    NAME VARCHAR(50),
    COURSE INTEGER
);

CREATE TABLE SUBJECTS (
    SUB_ID INTEGER PRIMARY KEY,
    NAME VARCHAR(100),
    HOURS INTEGER
);

CREATE TABLE STUDENTS (
    STUDENT_ID INTEGER PRIMARY KEY,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    PATRONYMIC VARCHAR(50),
    BIRTH DATE,
    GROUP_ID INTEGER,
    FOREIGN KEY (GROUP_ID) REFERENCES GROUPS(GROUP_ID)
);

CREATE TABLE PLANN (
    GROUP_ID INTEGER,
    SUB_ID INTEGER,
    PRIMARY KEY (GROUP_ID, SUB_ID),
    FOREIGN KEY (GROUP_ID) REFERENCES GROUPS(GROUP_ID),
    FOREIGN KEY (SUB_ID) REFERENCES SUBJECTS(SUB_ID)
);

INSERT INTO GROUPS VALUES 
(135, '��135', 1),
(235, '��235', 2),
(335, '��335', 3),
(134, '��134', 1);

INSERT INTO SUBJECTS VALUES 
(1, '������', 200),
(2, '����������', 120),
(3, '������ ��������������', 70),
(4, '�������������� ��', 130),
(5, '�������� ����������� ����������������', 90),
(6, '��������-��������������� ����������������', 70);

INSERT INTO STUDENTS VALUES 
(1, '�.', '���������', '�.', '1997-12-25', 135),
(2, '�.', '������', NULL, '1985-12-25', 135),
(3, '�.', '���������', NULL, '1987-09-22', 235),
(4, '�.', '���������', '�.', '1992-06-17', 235),
(5, '�.', '�������', '�.', '1992-05-13', 335),
(6, '�.', '������', NULL, '1992-08-14', 335);

INSERT INTO PLANN VALUES 
(135, 1), (135, 2),
(235, 3), (235, 4),
(335, 5), (335, 6);


UPDATE STUDENTS 
SET GROUP_ID = 134 
WHERE GROUP_ID = 135;

DELETE FROM PLANN WHERE GROUP_ID = 135;
DELETE FROM GROUPS WHERE GROUP_ID = 135;

UPDATE SUBJECTS
SET HOURS = HOURS + 30
WHERE NAME IN ('�������� ����������� ����������������', '��������-��������������� ����������������');

ALTER TABLE SUBJECTS ADD CONTROL_FORM VARCHAR(20);

UPDATE SUBJECTS
SET CONTROL_FORM = CASE
    WHEN NAME = '������ ��������������' THEN '�����'
    ELSE '�������'
END;

ALTER TABLE STUDENTS DROP COLUMN PATRONYMIC;



SELECT * FROM GROUPS;
SELECT * FROM SUBJECTS;
SELECT * FROM STUDENTS;
SELECT * FROM PLANN;



SELECT LAST_NAME
FROM STUDENTS
WHERE LAST_NAME LIKE N'%�%' OR LAST_NAME LIKE N'%�%';


SELECT *
FROM STUDENTS
WHERE LAST_NAME LIKE N'�%' AND PATRONYMIC IS NULL;


SELECT *
FROM STUDENTS
WHERE LEN(LAST_NAME) >= 8;


SELECT *
FROM STUDENTS
WHERE LEN(LAST_NAME) <> 7 AND LAST_NAME LIKE N'%�%';


SELECT S.*
FROM STUDENTS S
JOIN GROUPS G ON S.GROUP_ID = G.GROUP_ID
WHERE G.COURSE IN (1,2)
ORDER BY S.FIRST_NAME;


SELECT S.*
FROM STUDENTS S
JOIN GROUPS G ON S.GROUP_ID = G.GROUP_ID
WHERE G.COURSE = 2
ORDER BY S.BIRTH DESC;
   

SELECT DISTINCT SUB.NAME, SUB.HOURS
FROM SUBJECTS SUB
JOIN PLANN P ON SUB.SUB_ID = P.SUB_ID
JOIN GROUPS G ON P.GROUP_ID = G.GROUP_ID
WHERE G.COURSE = 2
ORDER BY SUB.NAME;


SELECT SUB.*
FROM SUBJECTS SUB
JOIN PLANN P ON SUB.SUB_ID = P.SUB_ID
JOIN GROUPS G ON P.GROUP_ID = G.GROUP_ID
WHERE G.COURSE = 1 AND SUB.HOURS > 100;


SELECT SUB.*
FROM SUBJECTS SUB
JOIN PLANN P ON SUB.SUB_ID = P.SUB_ID
JOIN GROUPS G ON P.GROUP_ID = G.GROUP_ID
WHERE G.COURSE = 3;


SELECT G.COURSE, G.NAME, SUB.NAME, SUB.HOURS
FROM SUBJECTS SUB
JOIN PLANN P ON SUB.SUB_ID = P.SUB_ID
JOIN GROUPS G ON P.GROUP_ID = G.GROUP_ID
WHERE SUB.HOURS > 100;


SELECT G.NAME, SUB.NAME, SUB.HOURS
FROM SUBJECTS SUB
JOIN PLANN P ON SUB.SUB_ID = P.SUB_ID
JOIN GROUPS G ON P.GROUP_ID = G.GROUP_ID
WHERE G.NAME LIKE N'��%';


SELECT LAST_NAME, FIRST_NAME, 
       DATEDIFF(YEAR, BIRTH, DATEFROMPARTS(YEAR(GETDATE()),1,1)) AS AGE
FROM STUDENTS
WHERE DATEDIFF(YEAR, BIRTH, DATEFROMPARTS(YEAR(GETDATE()),1,1)) > 30;


SELECT LAST_NAME, FIRST_NAME, 
       DATEDIFF(YEAR, BIRTH, GETDATE()) AS AGE
FROM STUDENTS
WHERE DATEDIFF(YEAR, BIRTH, GETDATE()) BETWEEN 35 AND 40
ORDER BY LAST_NAME;


SELECT LAST_NAME, FIRST_NAME, BIRTH
FROM STUDENTS
WHERE MONTH(BIRTH) = 10
ORDER BY BIRTH ASC;










